import nodemailer from 'nodemailer';

let cachedTransport = null;
let cachedIsEthereal = false;

async function getTransport() {
  if (cachedTransport) return cachedTransport;
  const host = process.env.SMTP_HOST;
  const port = Number(process.env.SMTP_PORT || 587);
  const user = process.env.SMTP_USER;
  const pass = process.env.SMTP_PASS;

  if (!host || !user || !pass) {
    // Fallback: create an Ethereal test account in dev
    if (process.env.NODE_ENV !== 'production') {
      const testAccount = await nodemailer.createTestAccount();
      cachedTransport = nodemailer.createTransport({
        host: 'smtp.ethereal.email',
        port: 587,
        auth: {
          user: testAccount.user,
          pass: testAccount.pass,
        },
      });
      cachedIsEthereal = true;
      return cachedTransport;
    }
    // No transport in production if not configured
    return null;
  }

  cachedTransport = nodemailer.createTransport({
    host,
    port,
    secure: port === 465,
    auth: { user, pass },
  });
  return cachedTransport;
}

export async function sendPasswordResetEmail({ to, resetUrl }) {
  const transport = await getTransport();
  if (!transport) throw new Error('SMTP transport not configured');

  const from = process.env.MAIL_FROM || 'no-reply@legalpro.local';
  const info = await transport.sendMail({
    from,
    to,
    subject: 'Reset your LegalPro password',
    text: `Click the link to reset your password: ${resetUrl}`,
    html: `<p>Click the link to reset your password:</p><p><a href="${resetUrl}">${resetUrl}</a></p>`,
  });
  const previewUrl = cachedIsEthereal ? nodemailer.getTestMessageUrl(info) : undefined;
  return { info, previewUrl };
}


export async function sendInvoiceEmail({ to, subject, message, invoice, client }) {
  const transport = await getTransport();
  if (!transport) throw new Error('SMTP transport not configured');

  const from = process.env.MAIL_FROM || 'no-reply@legalpro.local';
  
  // Auto-generate comprehensive email content
  const autoGeneratedSubject = `Invoice ${invoice.invoiceNumber} - Legal Services - Due ${new Date(invoice.dueDate).toLocaleDateString('en-IN')}`;
  const autoGeneratedMessage = generateInvoiceEmailContent(invoice, client);
  
  const html = `
    <div style="font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; background-color: #f9f9f9;">
      <div style="background-color: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <div style="text-align: center; margin-bottom: 30px; border-bottom: 2px solid #e0e0e0; padding-bottom: 20px;">
          <h1 style="color: #2c3e50; margin: 0; font-size: 28px;">INVOICE</h1>
          <p style="color: #7f8c8d; margin: 5px 0 0 0; font-size: 16px;">Legal Services Invoice</p>
        </div>
        
        <div style="margin-bottom: 30px;">
          <h2 style="color: #2c3e50; margin-bottom: 20px; font-size: 20px;">Dear ${client?.name || 'Valued Client'},</h2>
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 6px; border-left: 4px solid #3498db;">
            <p style="margin: 0; color: #2c3e50; line-height: 1.6;">
              ${autoGeneratedMessage}
            </p>
          </div>
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #2c3e50; margin-bottom: 15px; font-size: 18px;">Invoice Details</h3>
          <table cellpadding="12" cellspacing="0" border="0" style="border-collapse: collapse; width: 100%; background-color: #f8f9fa; border-radius: 6px;">
            <tr>
              <td style="border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057; width: 30%;">Invoice Number:</td>
              <td style="border-bottom: 1px solid #dee2e6; color: #2c3e50; font-weight: bold;">${invoice.invoiceNumber}</td>
            </tr>
            <tr>
              <td style="border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057;">Issue Date:</td>
              <td style="border-bottom: 1px solid #dee2e6; color: #2c3e50;">${new Date(invoice.issueDate).toLocaleDateString('en-IN')}</td>
            </tr>
            <tr>
              <td style="border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057;">Due Date:</td>
              <td style="border-bottom: 1px solid #dee2e6; color: #e74c3c; font-weight: bold;">${new Date(invoice.dueDate).toLocaleDateString('en-IN')}</td>
            </tr>
            <tr>
              <td style="font-weight: bold; color: #495057;">Status:</td>
              <td style="color: #2c3e50; font-weight: bold; text-transform: capitalize;">${invoice.status}</td>
            </tr>
          </table>
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #2c3e50; margin-bottom: 15px; font-size: 18px;">Services Provided</h3>
          <table cellpadding="12" cellspacing="0" border="1" style="border-collapse: collapse; width: 100%; border-color: #dee2e6;">
            <thead style="background-color: #f8f9fa;">
              <tr>
                <th align="left" style="padding: 12px; font-weight: bold; color: #495057; border-bottom: 2px solid #dee2e6;">Description</th>
                <th align="center" style="padding: 12px; font-weight: bold; color: #495057; border-bottom: 2px solid #dee2e6;">Quantity</th>
                <th align="right" style="padding: 12px; font-weight: bold; color: #495057; border-bottom: 2px solid #dee2e6;">Unit Price (₹)</th>
                <th align="right" style="padding: 12px; font-weight: bold; color: #495057; border-bottom: 2px solid #dee2e6;">Amount (₹)</th>
              </tr>
            </thead>
            <tbody>
              ${(invoice.items || []).map(i => `
                <tr>
                  <td style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #2c3e50;">${i.description}</td>
                  <td align="center" style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #2c3e50;">${i.quantity}</td>
                  <td align="right" style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #2c3e50;">₹${i.unitPrice.toLocaleString('en-IN')}</td>
                  <td align="right" style="padding: 12px; border-bottom: 1px solid #dee2e6; color: #2c3e50; font-weight: bold;">₹${i.amount.toLocaleString('en-IN')}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>

        <div style="margin-bottom: 30px;">
          <div style="text-align: right;">
            <div style="background-color: #f8f9fa; padding: 20px; border-radius: 6px; display: inline-block; min-width: 300px;">
              <div style="margin-bottom: 8px;">
                <span style="color: #495057;">Subtotal:</span>
                <span style="float: right; font-weight: bold; color: #2c3e50;">₹${invoice.subtotal.toLocaleString('en-IN')}</span>
              </div>
              ${invoice.taxRate > 0 ? `
                <div style="margin-bottom: 8px;">
                  <span style="color: #495057;">Tax (${invoice.taxRate}%):</span>
                  <span style="float: right; font-weight: bold; color: #2c3e50;">₹${invoice.taxAmount.toLocaleString('en-IN')}</span>
                </div>
              ` : ''}
              ${invoice.discountAmount > 0 ? `
                <div style="margin-bottom: 8px;">
                  <span style="color: #495057;">Discount:</span>
                  <span style="float: right; font-weight: bold; color: #27ae60;">-₹${invoice.discountAmount.toLocaleString('en-IN')}</span>
                </div>
              ` : ''}
              <div style="border-top: 2px solid #3498db; padding-top: 12px; margin-top: 12px;">
                <span style="font-size: 18px; font-weight: bold; color: #2c3e50;">Total Amount:</span>
                <span style="float: right; font-size: 20px; font-weight: bold; color: #e74c3c;">₹${invoice.total.toLocaleString('en-IN')}</span>
              </div>
            </div>
          </div>
        </div>

        ${invoice.notes ? `
          <div style="margin-bottom: 30px;">
            <h3 style="color: #2c3e50; margin-bottom: 15px; font-size: 18px;">Additional Notes</h3>
            <div style="background-color: #f8f9fa; padding: 20px; border-radius: 6px; border-left: 4px solid #f39c12;">
              <p style="margin: 0; color: #2c3e50; line-height: 1.6;">${invoice.notes}</p>
            </div>
          </div>
        ` : ''}

        ${invoice.terms ? `
          <div style="margin-bottom: 30px;">
            <h3 style="color: #2c3e50; margin-bottom: 15px; font-size: 18px;">Terms & Conditions</h3>
            <div style="background-color: #f8f9fa; padding: 20px; border-radius: 6px; border-left: 4px solid #9b59b6;">
              <p style="margin: 0; color: #2c3e50; line-height: 1.6;">${invoice.terms}</p>
            </div>
          </div>
        ` : ''}

        <div style="background-color: #e8f5e8; padding: 20px; border-radius: 6px; border-left: 4px solid #27ae60; margin-bottom: 30px;">
          <h3 style="color: #27ae60; margin-top: 0; margin-bottom: 15px; font-size: 18px;">Payment Instructions</h3>
          <p style="margin: 0; color: #2c3e50; line-height: 1.6;">
            Please remit payment by <strong>${new Date(invoice.dueDate).toLocaleDateString('en-IN')}</strong> to avoid any late fees. 
            For payment queries or to discuss payment arrangements, please contact us immediately.
          </p>
        </div>

        <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #dee2e6;">
          <p style="color: #7f8c8d; margin: 0; font-size: 14px;">
            Thank you for choosing our legal services. We appreciate your business and look forward to continuing our professional relationship.
          </p>
          <p style="color: #7f8c8d; margin: 10px 0 0 0; font-size: 12px;">
            This is an automated invoice. Please contact us if you have any questions.
          </p>
        </div>
      </div>
    </div>
  `;

  const info = await transport.sendMail({
    from,
    to,
    subject: subject || autoGeneratedSubject,
    text: generatePlainTextInvoice(invoice, client, autoGeneratedMessage),
    html,
  });
  const previewUrl = cachedIsEthereal ? nodemailer.getTestMessageUrl(info) : undefined;
  return { ok: true, previewUrl };
}

function generateInvoiceEmailContent(invoice, client) {
  const daysUntilDue = Math.ceil((new Date(invoice.dueDate) - new Date()) / (1000 * 60 * 60 * 24));
  const isOverdue = daysUntilDue < 0;
  const isDueSoon = daysUntilDue <= 7 && daysUntilDue >= 0;
  
  let urgencyText = '';
  if (isOverdue) {
    urgencyText = `This invoice is overdue by ${Math.abs(daysUntilDue)} day${Math.abs(daysUntilDue) !== 1 ? 's' : ''}. `;
  } else if (isDueSoon) {
    urgencyText = `This invoice is due in ${daysUntilDue} day${daysUntilDue !== 1 ? 's' : ''}. `;
  }

  const totalAmount = `₹${invoice.total.toLocaleString('en-IN')}`;
  const dueDate = new Date(invoice.dueDate).toLocaleDateString('en-IN');
  
  return `We hope this email finds you well. ${urgencyText}Please find attached your invoice ${invoice.invoiceNumber} for legal services provided. The total amount due is ${totalAmount} and payment is due by ${dueDate}. We have provided detailed breakdown of all services rendered below for your review and records.`;
}

function generatePlainTextInvoice(invoice, client, message) {
  return `
INVOICE - ${invoice.invoiceNumber}

Dear ${client?.name || 'Valued Client'},

${message}

INVOICE DETAILS:
Invoice Number: ${invoice.invoiceNumber}
Issue Date: ${new Date(invoice.issueDate).toLocaleDateString('en-IN')}
Due Date: ${new Date(invoice.dueDate).toLocaleDateString('en-IN')}
Status: ${invoice.status}

SERVICES PROVIDED:
${(invoice.items || []).map(i => `- ${i.description} (Qty: ${i.quantity}, Rate: ₹${i.unitPrice.toLocaleString('en-IN')}, Amount: ₹${i.amount.toLocaleString('en-IN')})`).join('\n')}

PAYMENT SUMMARY:
Subtotal: ₹${invoice.subtotal.toLocaleString('en-IN')}
${invoice.taxRate > 0 ? `Tax (${invoice.taxRate}%): ₹${invoice.taxAmount.toLocaleString('en-IN')}` : ''}
${invoice.discountAmount > 0 ? `Discount: -₹${invoice.discountAmount.toLocaleString('en-IN')}` : ''}
TOTAL AMOUNT: ₹${invoice.total.toLocaleString('en-IN')}

${invoice.notes ? `NOTES: ${invoice.notes}` : ''}
${invoice.terms ? `TERMS: ${invoice.terms}` : ''}

PAYMENT INSTRUCTIONS:
Please remit payment by ${new Date(invoice.dueDate).toLocaleDateString('en-IN')} to avoid any late fees.

Thank you for choosing our legal services.
  `.trim();
}


